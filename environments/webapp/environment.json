{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string"
        },
        "environmentName": {
            "type": "string",
            "metadata": {
                "description": "Name of the environment.",
                "restrictions": "projectName+environmentName length should be max 20. Required by Azure storage naming conventions."
            },
            "allowedValues": [
                "prod",
                "dev",
                "release",
                "uat",
                "staging",
                "test",
                "qa",
                "local"
            ]
        },
        "size": {
            "type": "string",
            "defaultValue": "Small",
            "allowedValues": [
                "ExtraSmall",
                "Small",
                "Medium",
                "Large",
                "ExtraLarge"
            ]
        },
        "templateBaseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Lateral-Pathfinder/arm-templates/master/templates/",
            "metadata": {
                "description": "Location for the individual deployment templates. If it's a blob storage account, the templateSasToken must have a value."
            }
        },
        "templateSasToken": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "Sas Token for Azure storage account. Used when the individual templates are linked from blob storage"
            }
        },
        "consolidate": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No",
            "metadata": {
                "description": "If Yes, multiple environments will have one single serverfarm and Redis cache. Cuts down costs."
            }
        },
        "emailReceivers": {
            "type": "array",
            "metadata": {
                "description": "These addresses will receive monitoring alerts."
            }
        },
        "devopsPrincipal": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "ObjectId of the Service Principal used for DevOps service connection."
            }
        },
        "customDomain": {
            "type": "string",
            "metadata": {
                "description": "Custom domain for the project."
            }
        },
        "createDomains": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "decription": "Skip custom domains creation at first run, it needs the apps to exist."
            }
        }
    },
    "variables": {
        "deploymentMode": "Incremental",
        "resourceName": "[concat(parameters('environmentName'), '-', parameters('projectName'))]",
        "keyVaultName": "[variables('resourceName')]",
        "actionGroupName": "[variables('resourceName')]",
        "appName": "webapp"
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "environmentSize",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'utils/Environment.Size.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "size": {
                        "value": "[parameters('size')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "actionGroup",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'insights/Microsoft.Insights.ActionGroups.sendEmail.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "name": {
                        "value": "[variables('actionGroupName')]"
                    },
                    "shortName": {
                        "value": "[parameters('environmentName')]"
                    },
                    "emailReceivers": {
                        "value": "[parameters('emailReceivers')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "keyVault",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'keyvault/Microsoft.KeyVault.vaults.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "vaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "sku": {
                        "value": "[reference('environmentSize').outputs.size.value.keyVaultSku]"
                    },
                    "enabledForTemplateDeployment": {
                        "value": true
                    }
                }
            },
            "dependsOn": [
                "environmentSize"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "KVDevOpsAccess",
            "condition": "[not(equals(parameters('devopsPrincipal'),''))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'keyvault/Microsoft.KeyVault.accessPolicies.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "objectId": {
                        "value": "[parameters('devopsPrincipal')]"
                    },
                    "secretsPermissions": {
                        "value": [
                            "list",
                            "get"
                        ]
                    }
                }
            },
            "dependsOn": [
                "keyVault"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(variables('appName'),'-insights')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'insights/Microsoft.Insights.Components.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "name": {
                        "value": "[concat(parameters('environmentName'), '-', variables('appName'), '-', parameters('projectName'))]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(variables('appName'),'-app')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'web/WebApp.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "project": {
                        "value": "[parameters('projectName')]"
                    },
                    "app": {
                        "value": "[variables('appName')]"
                    },
                    "environment": {
                        "value": "[parameters('environmentName')]"
                    },
                    "size": {
                        "value": "[parameters('size')]"
                    },
                    "templateBaseUrl": {
                        "value": "[parameters('templateBaseUrl')]"
                    },
                    "templateSasToken": {
                        "value": "[parameters('templateSasToken')]"
                    },
                    "consolidateServerFarms": {
                        "value": "[parameters('consolidate')]"
                    },
                    "actionGroupId": {
                        "value": "[concat(subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('actionGroupName'))]"
                    },
                    "customDomain": {
                        "value": "[parameters('customDomain')]"
                    },
                    "createDomains": {
                        "value": "[parameters('createDomains')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "instrumentationKey": {
                        "value": "[reference(concat(variables('appName'),'-insights')).outputs.InstrumentationKey.value]"
                    }
                }
            },
            "dependsOn": [
                "actionGroup",
                "keyVault",
                "[concat(variables('appName'),'-insights')]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('AzureServicesHealthAlert', parameters('environmentName'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'insights/Microsoft.Insights.activityLogAlerts.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "name": {
                        "value": "[concat('AzureServicesHealthAlert', parameters('environmentName'))]"
                    },
                    "description": {
                        "value": "Alert when azure services used by the environment are down."
                    },
                    "actionGroupId": {
                        "value": "[concat(subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/microsoft.insights/actionGroups/', variables('actionGroupName'))]"
                    },
                    "conditions": {
                        "value": [
                            {
                                "field": "category",
                                "equals": "ServiceHealth",
                                "containsAny": null
                            },
                            {
                                "field": "properties.impactedServices[*].ServiceName",
                                "equals": null,
                                "containsAny": [
                                    "App Service",
                                    "App Service \\ Web Apps",
                                    "Application Insights",
                                    "Key Vault"
                                ]
                            },
                            {
                                "field": "properties.impactedServices[*].ImpactedRegions[*].RegionName",
                                "equals": null,
                                "containsAny": [
                                    "[resourceGroup().location]"
                                ]
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "actionGroup"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "keyVaultSecrets",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "[variables('deploymentMode')]",
                "templateLink": {
                    "uri": "[concat(parameters('templateBaseUrl'), 'keyvault/Microsoft.KeyVault.secrets.json', parameters('templateSasToken'))]"
                },
                "parameters": {
                    "vaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "secrets": {
                        "value": {
                            "secrets": [
                                {
                                    "secretName": "Environment",
                                    "secretValue": "[parameters('environmentName')]"
                                },
                                {
                                    "secretName": "ActiveDirectoryTenantId",
                                    "secretValue": "[subscription().tenantId]"
                                }
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "keyVault"
            ]
        }
    ],
    "outputs": {
    },
    "functions": [
    ]
}