{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Key Vault"
            }
        },
        "users": {
            "type": "array",
            "defaultValue": [
                "abfa0a7c-a6b6-4736-8310-5855508787cd"
            ],
            "metadata": {
                "description": "Object Ids for the AAD Users to give permission to. The default is the Azure App Service. Suggested to leave that in."
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "SKU for the vault"
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
            }
        },
        "secrets": {
            "type": "secureObject",
            "defaultValue": "{}",
            "metadata": {
                "description": "Specifies all secrets {\"secretName\":\"\",\"secretValue\":\"\"} wrapped in a secure object."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('vaultName')]",
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "KeyVault"
            },
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "tenantId": "[subscription().tenantId]",
                "copy": [
                    {
                        "name": "accessPolicies",
                        "count": "[length(parameters('users'))]",
                        "input": {
                            "tenantId": "[subscription().tenantId]",
                            "objectId": "[parameters('users')[copyIndex('accessPolicies')]]",
                            "permissions": {
                                "keys": [
                                    "Get",
                                    "List",
                                    "Update",
                                    "Create",
                                    "Import",
                                    "Delete",
                                    "Recover",
                                    "Backup",
                                    "Restore"
                                ],
                                "secrets": [
                                    "Get",
                                    "List",
                                    "Set",
                                    "Delete",
                                    "Recover",
                                    "Backup",
                                    "Restore"
                                ],
                                "certificates": [
                                    "Get",
                                    "List",
                                    "Update",
                                    "Create",
                                    "Import",
                                    "Delete",
                                    "Recover",
                                    "Backup",
                                    "Restore",
                                    "ManageContacts",
                                    "ManageIssuers",
                                    "GetIssuers",
                                    "ListIssuers",
                                    "SetIssuers",
                                    "DeleteIssuers"
                                ]
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "[parameters('sku')]",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Deny",
                    "bypass": "AzureServices",
                    "ipRules": [
                    ],
                    "virtualNetworkRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(parameters('vaultName'), '/', parameters('secrets').secrets[copyIndex()].secretName)]",
            "apiVersion": "2018-02-14",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
            ],
            "copy": {
                "name": "secretsCopy",
                "count": "[length(parameters('secrets').secrets)]"
            },
            "properties": {
                "value": "[parameters('secrets').secrets[copyIndex()].secretValue]"
            }
        }
    ],
    "outputs": {
        "vault": {
            "type": "object",
            "value": "[reference(parameters('vaultName'), '2018-02-14', 'Full')]"
        }
    }
}